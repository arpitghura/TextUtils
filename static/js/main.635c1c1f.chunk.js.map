{"version":3,"sources":["Components/Navbar.js","Components/TextForm.js","Components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","_jsx","className","concat","mode","children","_jsxs","href","title","id","type","onClick","toggleMode","htmlFor","TextForm","_useState","useState","_useState2","_slicedToArray","text","setText","_Fragment","style","color","heading","value","onChange","event","target","backgroundColor","rows","disabled","length","newText","toUpperCase","showAlert","toLowerCase","split","join","navigator","clipboard","writeText","filter","element","Alert","height","alert","role","word","lower","charAt","slice","captalize","msg","defaultProps","aboutText","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","Router","document","body","Switch","Route","exact","path","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","React","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.635c1c1f.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n// import { Link } from 'react-router-dom'\n\n\nexport default function Navbar(props) {\n    return (\n      <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\n        <div className=\"container-fluid\" >\n          {/* <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link> */}\n          <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\n          {/* <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span className=\"navbar-toggler-icon\"></span>\n          </button> */}\n          {/* <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\"> */}\n          <div className=\"\" id=\"navbarSupportedContent\">\n            {/* <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n              <li className=\"nav-item\">\n                <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\n              </li>\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\n              </li>\n            </ul> */}\n            {/* <form className=\"d-flex col-12 col-md-7 col-lg-3\">\n              <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\n              <button className={`btn btn-outline-${props.mode === 'light'?'dark':'light'}`} type=\"submit\">Search</button>\n            </form> */}\n            <div className={`form-check form-switch mx-lg-3 my-3 my-lg-0 text-${props.mode === 'light'?'dark':'light'}`}>\n              <input className=\"form-check-input\" type=\"checkbox\" onClick={props.toggleMode} id=\"flexSwitchCheckDefault\"/>\n              <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Dark Mode</label>\n            </div>\n          </div>\n        </div>\n      </nav>\n    )\n}\n\n//Props Types & Required Use\n  Navbar.propTypes = {\n    title: PropTypes.string.isRequired,\n    aboutText:PropTypes.string\n  }\n\n//Default Props\n Navbar.defaultProps = {\n   title: \"TextUtils\",\n   aboutText: \"About\"\n } \n","import React, { useState }  from 'react'\n\nexport default function TextForm(props) {\n    \n    const handleUpClick = () => {\n        // console.log(\"Uppercase was clicked \" + text);\n        let newText = text.toUpperCase();\n        setText(newText);\n        props.showAlert(\"Converted to Upper Case\", \"success\");\n    }\n    const handleDownClick = () => {\n        let newText = text.toLowerCase();\n        setText(newText);\n        props.showAlert(\"Converted to Lower Case\", \"success\");\n    }\n    const handleClearClick = () => {\n        let newText = '';\n        setText(newText);\n        props.showAlert(\"Text Cleared\", \"success\");\n    }\n    const handleRemoveSpaces = () => {\n        let newText = text.split(/[ ]+/);\n        setText(newText.join(\" \"));\n        props.showAlert(\"Extra Spaces Removed\", \"success\");\n    }\n    const handleCopy = () => {\n        navigator.clipboard.writeText(text);\n        props.showAlert(\"Text Copied to Clipboard\", \"success\");\n    }\n    // const handleCapitalClick = () => {\n    //     // let str = text.toString();\n    //     // let newText =  str.charAt(0).toUpperCase() + str.substring(1);\n    //     // setText(newText);\n    //     // document.getElementById(\"mybox\").classList.add('first-letter-uppercase');\n    // }\n\n\n    const handleOnChange = (event) => {\n        // console.log(\"OnChange\");\n        setText(event.target.value);\n    }\n\n    const [text, setText] = useState(\"\");\n    // text = \"new text\"; // wrong way to change the state\n    // setText(\"new text\"); //correct way to change the state\n    return (\n        <>\n        <div className=\"container\" style={{color: props.mode === 'dark'?'white':'black'}}>\n            <h2 className='mb-2'>{props.heading}</h2>\n            <div className=\"mb-3\">\n            <textarea className=\"form-control\" value ={text} onChange={handleOnChange} style={{backgroundColor: props.mode === 'dark'?'#5566':'white',color: props.mode === 'dark'?'white':'black'}} id=\"mybox\" rows=\"8\"></textarea>\n            </div>\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleUpClick}>Convert To Uppercase</button>\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleDownClick}>Convert To Lowercase</button>\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleRemoveSpaces}>Remove Extra Spaces</button>\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleCopy}>Copy Text</button>\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleClearClick}>Clear Text</button>\n        </div>\n        <div className=\"container my-3\" style={{color: props.mode === 'dark'?'white':'black'}}>\n            <h1>Text Summary</h1>\n            <p>{text.length} Characters and {text.split(/\\s+/).filter((element)=>{ return element.length !== 0}).length} Words</p>\n            <p>Reading Time: {0.008 * text.split(\" \").filter((element)=>{ return element.length !== 0}).length} Minutes</p>\n            <h2>Preview</h2>\n            <p>{text.length>0?text:\"Try TextUtils to preview your text here\"}</p>\n        </div>\n        </>\n    )\n}\n","import React from 'react'\n\nexport default function Alert(props) {\n    const captalize = (word)=>{\n        const lower =  word.toLowerCase();\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\n    }\n    return (\n        <div style={{height: '30px'}}>\n        {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show container py-2`} role=\"alert\">\n        <strong>{captalize(props.alert.type)} </strong>: {props.alert.msg}</div> }\n        </div>\n    )\n}\n","import './App.css';\n// import About from './Components/About';\nimport Navbar from './Components/Navbar';\nimport TextForm from './Components/TextForm';\nimport React, { useState } from 'react'\nimport Alert from './Components/Alert';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode, setMode] = useState('light'); // whether dark mode is enabled or not\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type)=>{\n      setAlert({\n        msg : message,\n    \t  type : type\n      })\n      setTimeout(() => {\n          setAlert(null)\n      }, 1500);\n  }\n  const toggleMode = () =>{\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Dark Mode has been enabled\",\"success\");\n      // document.title = 'TextUtils - Dark Mode'; // Change Title Dynamically\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light Mode has been enabled\",\"success\");\n    }\n  }\n\n  return (\n    <>\n    <Router>\n    <Navbar mode={mode} toggleMode={toggleMode} />\n    <Alert alert={alert}/>\n    <div className=\"container my-3\">\n    {/* /users --> Component 1\n      \t/users/home --> Component 2 */}\n    <Switch>\n          {/* <Route exact path=\"/about\"> \n            <About mode={mode}/>\n          </Route> */}\n          <Route exact path=\"/\">\n          <TextForm showAlert={showAlert} heading=\"Try Out TextUtils Now!!\" mode={mode}/>\n          </Route>\n    </Switch>\n    </div>\n    </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}